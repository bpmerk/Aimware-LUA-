-- stuff
local draw_Line, draw_TextShadow, draw_Color, draw_Text, client_WorldToScreen, draw_GetScreenSize, client_GetConVar, client_SetConVar, client_exec, PlayerIndexByUserID, GetLocalPlayer, gui_SetValue, gui_GetValue, LocalPlayerIndex, c_AllowListener, cb_Register = draw.Line, draw.TextShadow, draw.Color, draw.Text, client.WorldToScreen, draw.GetScreenSize, client.GetConVar, client.SetConVar, client.Command, client.GetPlayerIndexByUserID, entities.GetLocalPlayer, gui.SetValue, gui.GetValue, client.GetLocalPlayerIndex, client.AllowListener, callbacks.Register
-------------- References
local L_RefE = gui.Reference("LEGIT", "Extra")
local V_RefM = gui.Reference("VISUALS", "Main")
--local G_VM = gui.Groupbox(V_RefM, "Extra Features", 0, 1457, 200, 173)
local VOO_Ref = gui.Reference("VISUALS", "OTHER", "Options")
local VEO_Ref = gui.Reference("VISUALS", "ENEMIES", "Options")
local VEF_Ref = gui.Reference("VISUALS", "ENEMIES", "Filter")
local VTO_Ref = gui.Reference("VISUALS", "TEAMMATES", "Options")
local M_Ref1 = gui.Reference("MISC", "Part 1")
--local G_M1 = gui.Groupbox(M_Ref1, "Extra Features", 0, 686, 200, 271)
-------------- Font
local fontz = draw.CreateFont("Tahoma", 30);
local ff = draw.CreateFont("Tahoma");
-------------- Better Grenades
local better_grenades = gui.Checkbox(VOO_Ref, "esp_other_better_grenades", "Better Grenades", false)

-------------- Auto Buy
local show, pressed = false, true
local AB_Show = gui.Checkbox(M_Ref1, "msc_autobuy", "AutoBuy", false)
local AB_W = gui.Window("AB_W", "Auto Buy", 200, 200, 200, 328);
local AB_GB = gui.Groupbox(AB_W, "Auto Buy Settings", 15, 14, 170, 268);
local AB_E = gui.Checkbox(AB_GB, "AB_Active", "Active", false);
local PrimaryWeapons = gui.Combobox(AB_GB, 'AB_Primary_Weapons', "Primary Weapons", "Off", "AK | M4", "Scout", "SG553 | AUG", "AWP", "Auto");
local SecondaryWeapons = gui.Combobox(AB_GB, 'AB_Secondary_Weapons', "Secondary Weapons", "Off", "Elite", "P250", "Tec-9 | Five-Seven", "R8 | Deagle");
local Armor = gui.Combobox(AB_GB, 'AB_Armor', "Armor", "Off", "Kevlar", "Kevlar + Helmet");
local Nades = gui.Checkbox(AB_GB, "AB_Nades", "Grenades", false);
local Zeus = gui.Checkbox(AB_GB, "AB_Zeus", "Zeus", false);
local Defuser = gui.Checkbox(AB_GB, "AB_Defuser", "Defuser", false);
-------------- View Model Extender
local function VM_Cache() xO = client_GetConVar("viewmodel_offset_x"); yO = client_GetConVar("viewmodel_offset_y"); zO = client_GetConVar("viewmodel_offset_z"); fO = client_GetConVar("viewmodel_fov"); end; VM_Cache()
local show2, pressed2 = false, true
local ViewModelShown = gui.Checkbox(M_Ref1, "msc_vme", "Viewmodel Changer", false)
local VM_W = gui.Window("VM_W", "Viewmodel Extender", 200,200,200,300)
local VMStuff = gui.Groupbox(VM_W, "Viewmodel Stuff", 15, 14, 170, 240)
local VM_e = gui.Checkbox(VMStuff, "msc_vme", "Enable", false)
local xS = gui.Slider(VMStuff, "VM_X", "X", xO, -20, 20)
local yS = gui.Slider(VMStuff, "VM_Y", "Y", yO, -100, 100)
local zS = gui.Slider(VMStuff, "VM_Z", "Z", zO, -20, 20)
local vfov = gui.Slider(VMStuff, "VM_fov", "Viewmodel FOV", fO, 0, 120)
-------------- Sniper Crosshair
local ComboCrosshair = gui.Combobox(V_RefM, "vis_sniper_crosshair", "Sniper Crosshair", "Off", "Engine Crosshair", "Draw Crosshair")
-------------- Scoped FOV Fix
local s_fovfix = gui.Checkbox(V_RefM, "vis_fixfov", "Fix Scoped FOV", false)
local fov_value = gui_GetValue("vis_view_fov")
local vm_fov_value = gui_GetValue("vis_view_model_fov")
-------------- Knife On Left Hand
local K_O_L_H = gui.Checkbox(M_Ref1, "msc_knifelefthand", "Knife On Left Hand", false)
-------------- Bomb Damage
local BombTimer = gui.Checkbox(VOO_Ref, "esp_other_better_c4timer", "Bomb Timer", false)
-------------- Bomb Damage
local Bomb_Damage = gui.Checkbox(VOO_Ref, "esp_other_bombdamage", "Bomb Damage", false)
-------------- Esp On Dead
local espdead = gui.Checkbox(VEF_Ref, "esp_espondead", "ESP when dead", false)
-------------- Engine Radar
local ERadar = gui.Checkbox(V_RefM, "esp_engine_radar", "Engine Radar", false)
-------------- Team & Enemy Tracers
local tracersEnemy = gui.Checkbox(VEO_Ref, "esp_enemy_tracer", "Tracers", false)
local tracersTeam = gui.Checkbox(VTO_Ref, "esp_team_tracer", "Tracers", false)
-------------- Team & Enemy & Other Distance + visible help 
local enemy_distance = gui.Checkbox(VEO_Ref, "esp_enemy_distance", "Distance", false)
local enemy_visiblehelp = gui.Checkbox(VEO_Ref, "esp_enemy_vishelp", "Visible Help", false)
local team_distance = gui.Checkbox(VTO_Ref, "esp_team_distance", "Distance", false)
local other_distance = gui.Checkbox(VOO_Ref, "esp_other_distance", "Distance", false)
-------------- Full Bright
local fBright = gui.Checkbox(V_RefM, "vis_fullbright", "Full Bright", false)
-------------- Third person on dead
local thirdpersonondead = gui.Checkbox(V_RefM, "vis_thirdperson_ondead", "ThirdPersonMode D", false)


------------------------- 
local abs_frame_time = globals.AbsoluteFrameTime;
local frame_rate = 0.0;
local get_abs_fps = function()
    frame_rate = 0.9 * frame_rate + (1.0 - 0.9) * abs_frame_time();
    return math.floor((1.0 / frame_rate) + 0.5);
end

local function distance2D(x1, y1, x2, y2) return math.floor(math.sqrt((x2-x1)^2 + (y2-y1)^2) * 0.0833); end

------------------------- Grenade Timers
local updatetick = 0; local grenades = {};
function EventHook(Event)
if Event:GetName() == "round_prestart" then grenades = {}; end
if Event:GetName() == "hegrenade_detonate" or Event:GetName() == "flashbang_detonate" 
or Event:GetName() == "inferno_expire" or Event:GetName() == "inferno_extinguish" then updatetick = globals.TickCount(); 
for index,value in pairs(grenades) do 
if value[1] == Event:GetInt("entityid") then table.remove(grenades, index); end end end end
function ESPHook(Builder)
if better_grenades:GetValue() then
if Builder:GetEntity():GetClass() == "CBaseCSGrenadeProjectile" then
local found = false;
for index,value in pairs(grenades) do
if value[1] == Builder:GetEntity():GetIndex() then
DeltaT = (globals.TickCount() - grenades[index][2]) * globals.TickInterval();
Builder:AddBarBottom(1 - (DeltaT/1.65)); found = true; break; end end
if found == false and globals.TickCount() > updatetick then
local gMatrix = {Builder:GetEntity():GetIndex(), globals.TickCount()};
table.insert(grenades, gMatrix); end end end end
function DrawingHook()
draw.SetFont(ff);
if better_grenades:GetValue() then
for indexF,valueF in pairs(entities.FindByClass("CInferno")) do
local found = false;
for indexT,valueT in pairs(grenades) do
if valueT[1] == valueF:GetIndex() then
x, y = client_WorldToScreen(valueF:GetAbsOrigin())
local mollysize = 25;
if x ~= nil and y ~= nil then
draw_Color(0, 0, 0, 255); draw.RoundedRectFill( x - mollysize, y, x + mollysize, y + 4 ); draw_Color(227, 227, 227, 255);
local math = (((globals.TickCount() - valueT[2]) * ((-1) - 1))/ ( (valueT[2] + 7 / globals.TickInterval()) - valueT[2])) + 1
draw.RoundedRectFill(x - mollysize, y, x + mollysize * math, y + 4); draw_Color(255, 255, 255, 255); draw.RoundedRect(x - mollysize, y, x + mollysize, y + 4) 
local w,h = draw.GetTextSize( "MOLLY" ) 
draw_Text(x - w/2, y - h * 1.25 , "MOLLY"); draw_TextShadow(x - w/2, y - h * 1.25 , "MOLLY"); end found = true; break; end end
if found == false and globals.TickCount() > updatetick then
local gMatrix = {valueF:GetIndex(), globals.TickCount()}; table.insert(grenades, gMatrix); end end end end
c_AllowListener("inferno_expire"); c_AllowListener("inferno_extinguish"); c_AllowListener("molotov_detonate"); c_AllowListener("hegrenade_detonate"); c_AllowListener("flashbang_detonate"); 
cb_Register("Draw", "DrawingHookG", DrawingHook); cb_Register("DrawESP", "ESPHookG", ESPHook); cb_Register("FireGameEvent", "EventHookG", EventHook); 


-------------------- Auto Buy 
function press() if AB_Show:GetValue() then show = true; else show = false; end if input.IsButtonPressed(gui_GetValue("msc_menutoggle")) then if pressed == true then pressed = false; else pressed = true; end end end
function shows() if show == true and pressed == true then AB_W:SetActive(1); elseif show == true and pressed == false or show == false and pressed == true or show == false and pressed == false then AB_W:SetActive(0); end end
function buy(Event)
if Event:GetName() == "player_spawn" then if PlayerIndexByUserID(Event:GetInt('userid')) == LocalPlayerIndex() then buy = true; end end
if GetLocalPlayer() ~= nil then money = GetLocalPlayer():GetProp("m_iAccount"); end
if AB_E:GetValue() then if buy == true then
if (SecondaryWeapons:GetValue() == 0) then
elseif (SecondaryWeapons:GetValue() == 1) then SecondaryWeapon = "elite";
elseif (SecondaryWeapons:GetValue() == 2) then SecondaryWeapon = "p250";
elseif (SecondaryWeapons:GetValue() == 3) then SecondaryWeapon = "tec9";
elseif (SecondaryWeapons:GetValue() == 4) then SecondaryWeapon = "deagle"; end
if money > 199 or money < 1 then if Zeus:GetValue() then client_exec("buy Taser", true); end end	
if money > 2200 or money < 1 then PWb = true; end
if PWb == true then
if (PrimaryWeapons:GetValue() == 0) then
elseif (PrimaryWeapons:GetValue() == 1) then PrimaryWeapon = "ak47";
elseif (PrimaryWeapons:GetValue() == 2) then PrimaryWeapon = "ssg08";
elseif (PrimaryWeapons:GetValue() == 3) then PrimaryWeapon = "sg556";
elseif (PrimaryWeapons:GetValue() == 4) then PrimaryWeapon = "awp";
elseif (PrimaryWeapons:GetValue() == 5) then PrimaryWeapon = "scar20"; end
if Armor:GetValue() == 0 then 
elseif Armor:GetValue() == 1 then armor = "vest";
elseif Armor:GetValue() == 2 then armor = "vest ; buy vesthelm"; end
if Nades:GetValue() then client_exec("buy hegrenade; buy incgrenade; buy molotov; buy smokegrenade; buy flashbang", true); end
if Defuser:GetValue() then client_exec("buy defuser", true); end
PWb = false; end
current_buy = ("buy ".. PrimaryWeapon.. " ; ".. "buy ".. SecondaryWeapon.. " ; ".. "buy ".. armor); client_exec(current_buy, true); buy = false; end end end
c_AllowListener("player_spawn"); cb_Register("Draw", "pressed", press); cb_Register("Draw", "shows", shows); cb_Register("FireGameEvent", "buy", buy); 

-------------------- View Model Extender
function press2() if ViewModelShown:GetValue() then show2 = true; else show2 = false; end if input.IsButtonPressed(gui_GetValue("msc_menutoggle")) then if pressed2 == true then pressed2 = false; else pressed2 = true; end end end
function shows2() if show2 == true and pressed2 == true then VM_W:SetActive(1); elseif show2 == true and pressed2 == false or show2 == false and pressed2 == true or show2 == false and pressed2 == false then VM_W:SetActive(0); end end
function VM_E() if VM_e:GetValue() then client_SetConVar("viewmodel_offset_x", xS:GetValue(), true); client_SetConVar("viewmodel_offset_y", yS:GetValue(), true); client_SetConVar("viewmodel_offset_z", zS:GetValue(), true); client_SetConVar("viewmodel_fov", vfov:GetValue(), true); end end
cb_Register("Draw", "p2", press2); cb_Register("Draw", "s2", shows2); cb_Register("Draw", "vm sets", VM_E);

-------------------- Scoped Fov Fix
function scopefov()
local view_fov = gui_GetValue("vis_view_fov"); local view_model_fov = gui_GetValue("vis_view_model_fov");
if view_fov ~= 0 then fov_value = gui_GetValue("vis_view_fov"); end if view_model_fov ~= 0 then vm_fov_value = gui_GetValue("vis_view_model_fov"); end
if s_fovfix:GetValue() then 
if GetLocalPlayer() ~= nil then
if GetLocalPlayer():GetProp("m_bIsScoped") == 1 or GetLocalPlayer():GetProp("m_bIsScoped") == 257 then gui_SetValue("vis_view_fov", 0); gui_SetValue("vis_view_model_fov", 0); 
elseif view_fov == 0 then gui_SetValue("vis_view_fov", fov_value); gui_SetValue("vis_view_model_fov", vm_fov_value); end end end end
cb_Register("Draw", "scopefov", scopefov);

-------------------- Sniper Crosshair
function ifCrosshair()
if GetLocalPlayer() == nil then return; end
local Weapon = GetLocalPlayer():GetPropEntity("m_hActiveWeapon");
if Weapon == nil then return; end
local cWep = Weapon:GetClass();
if cWep == "CWeaponAWP" or cWep == "CWeaponSSG08" or cWep == "CWeaponSCAR20" or cWep == "CWeaponG3SG1" then drawCrosshair = true; 
elseif cWep ~= "CWeaponawp" and cWep ~= "CWeaponSSG08" and cWep ~= "CWeaponSCAR20" and cWep ~= "CWeaponG3SG1" then drawCrosshair = false; end 
local screenCenterX, screenY = draw_GetScreenSize(); local scX, scY = screenCenterX / 2, screenY / 2;
if drawCrosshair == true and ComboCrosshair:GetValue() == 0 then client_SetConVar("weapon_debug_spread_show", 0, true)
elseif drawCrosshair == true and ComboCrosshair:GetValue() == 1 then client_SetConVar("weapon_debug_spread_show", 3, true)
elseif drawCrosshair == true and ComboCrosshair:GetValue() == 2 then client_SetConVar("weapon_debug_spread_show", 0, true); gui_SetValue('esp_crosshair', false); draw.SetFont(ff);
	draw_Color(128,0,0,255); draw_Line(scX, scY - 8, scX, scY + 8); --[[ line down ]] draw_Line(scX - 8, scY, scX + 8, scY); --[[ line across ]] end end
cb_Register("Draw", "sniper crosshairs", ifCrosshair);

-------------------- Bomb Timer & defuse timer
local function mathfix() local screenX, screenY = draw_GetScreenSize() screenY3 = screenY/2; end cb_Register("Draw", "fix", mathfix);
colorchange, drawBar, drawDefuse, plantedTime, plantedTime2, fill, fill2, fill3 = 10, false, false, 0, 0, 0, screenY3, 0
function bomb(event)
if event:GetName() == "bomb_planted" then plantedTime = globals.CurTime(); drawBar = true; end
if event:GetName() == "bomb_begindefuse" then plantedTime2 = globals.CurTime(); drawDefuse = true; end
if event:GetName() == "bomb_abortdefuse" then drawDefuse = false; fill2 = screenY3; fill3 = 0; end
if event:GetName() == "round_end" then drawBar = false; drawDefuse = false; fill = 0; fill2 = screenY3; fill3 = 0; end end
function drawProgress()
if BombTimer:GetValue() then
if drawBar == true then
local screenX, screenY = draw_GetScreenSize()
local ToExplode = entities.FindByClass("CPlantedC4")
for i=1, #ToExplode do
c4time = math.floor(ToExplode[i]:GetProp("m_flTimerLength"))
if math.floor((plantedTime - globals.CurTime()) + c4time) > -1  then
local godownby = (screenY / c4time) / get_abs_fps()
C4time = string.format("%.1f", ((plantedTime - globals.CurTime()) + c4time))
if math.floor((plantedTime - globals.CurTime()) + c4time) <= colorchange then draw_Color(255,0,0,255) else draw_Color(0,255,0,255) end 
draw.FilledRect(0, fill, 10, screenY); draw.SetFont(ff);
draw_Color(0,0,0,100); draw.FilledRect(0, 0, 10, screenY); 
draw_Color(255,255,255,255); draw_Text(13, fill-3, string.format("%.0f", (plantedTime - globals.CurTime()) + c4time));
fill = fill + godownby; end end end
if drawDefuse == true then
local screenX, screenY = draw_GetScreenSize()
local ToDefuse = entities.FindByClass("CPlantedC4");
DefuseTime = math.floor(ToDefuse[1]:GetProp("m_flDefuseLength"));
DefuseT = string.format("%.1f", (plantedTime2 - globals.CurTime()) + DefuseTime);
if DefuseTime == 10 then local godownby3 = (screenY / DefuseTime) / get_abs_fps(); draw.SetFont(ff);
draw_Color(0,0,255,255); draw.FilledRect(0, fill3, 10, screenY);
draw_Color(0,0,0,100); draw.FilledRect(0, 0, 10, screenY);
draw_Color(255,255,255,255); draw_Text(13, fill3-3, DefuseT); fill3 = fill3 + godownby3;
elseif DefuseTime == 5 then screenY3 = screenY/2; local godownby2 = (screenY3 / DefuseTime) / get_abs_fps(); draw.SetFont(ff);
draw_Color(0,0,255,255); draw.FilledRect(0, fill2, 10, screenY);
draw_Color(0,0,0,100); draw.FilledRect(0, screenY3, 10, screenY);
draw_Color(255,255,255,255); draw_Text(13, fill2-3, DefuseT);
fill2 = fill2 + godownby2; end end end end

-------------------- Bomb Damage
function DrawDamage()
if Bomb_Damage:GetValue() then
if entities.FindByClass("CPlantedC4")[1] ~= nil then
local Bomb = entities.FindByClass("CPlantedC4")[1];
if Bomb:GetProp("m_bBombTicking") and Bomb:GetProp("m_bBombDefused") == 0 and globals.CurTime() < Bomb:GetProp("m_flC4Blow") then
local Player = GetLocalPlayer();
HealthToTake = string.format("%.0f", (DamagefromDomb(Bomb, Player)));
draw.SetFont(fontz)
if Player:GetTeamNumber() == 3 and Player:GetProp("m_bHasDefuser") == 0 then if (plantedTime - globals.CurTime()) + c4time <= 10.05 then r, g, b, a = 255,13,13,255; else r, g, b, a = 255,255,255,255; end
elseif Player:GetTeamNumber() == 3 and Player:GetProp("m_bHasDefuser") == 1 then if (plantedTime - globals.CurTime()) + c4time <= 5.05 then r, g, b, a = 255,13,13,255; else r, g, b, a = 255,255,255,255; end else r, g, b, a = 255,255,255,255 end
if Bomb:GetProp("m_nBombSite") == 0 then draw_Color(r, g, b, a); draw_Text(15, 0, "A - ".. C4time.."s")
elseif Bomb:GetProp("m_nBombSite") == 1 then draw_Color(r, g, b, a); draw_Text(15, 0, "B - ".. C4time.."s"); end
if globals.CurTime() < Bomb:GetProp("m_flC4Blow") then
if HealthToTake + 1 < Player:GetHealth() then 
draw_Color(255,255,255,255); draw_Text(15, 25, "-"..math.floor(HealthToTake + 1));
else draw_Color(255,0,0,255); draw_Text(15, 25, "FATAL"); end
end end end end draw.SetFont(ff); end
cb_Register('Draw', 'DrawDamage', DrawDamage);
function DamagefromDomb(Bomb, Player)
local C4Distance = math.sqrt((select(1,Bomb:GetAbsOrigin()) - select(1,Player:GetAbsOrigin())) ^ 2 + (select(2,Bomb:GetAbsOrigin()) - select(2,Player:GetAbsOrigin())) ^ 2 + (select(3,Bomb:GetAbsOrigin()) - select(3,Player:GetAbsOrigin())) ^ 2);
local Gauss = (C4Distance - 75.68) / 789.2 
local flDamage = 450.7 * math.exp(-Gauss * Gauss);
if Player:GetProp("m_ArmorValue") > 0 then
local flArmorRatio = 0.5; local flArmorBonus = 0.5;
if Player:GetProp("m_ArmorValue") > 0 then
local flNew = flDamage * flArmorRatio;
local flArmor = (flDamage - flNew) * flArmorBonus;
if flArmor > Player:GetProp("m_ArmorValue") then
flArmor = Player:GetProp("m_ArmorValue") * (1 / flArmorBonus); flNew = flDamage - flArmor; end; flDamage = flNew; end end
return math.max(flDamage, 0); end 
c_AllowListener('bomb_planted'); c_AllowListener("bomb_defused"); c_AllowListener('round_end'); c_AllowListener('bomb_begindefuse'); c_AllowListener('bomb_abortdefuse');
cb_Register('Draw', 'drawing bomb time', drawProgress); cb_Register('FireGameEvent', 'bomb thing', bomb);


-------------------- Esp on Dead
function ESP_Always_OnDead() 
if espdead:GetValue() then
if GetLocalPlayer() == nil then return;
elseif GetLocalPlayer():GetHealth() <= 0 then
    gui_SetValue("esp_visibility_enemy", 0);
    gui_SetValue("esp_enemy_box", 3);
    gui_SetValue("esp_enemy_weapon", 1);
    gui_SetValue("esp_enemy_health", 2);
    gui_SetValue("esp_enemy_glow", 2);
	gui_SetValue("esp_enemy_skeleton", true);
	gui_SetValue("esp_enemy_name", true);
else
    gui_SetValue("esp_visibility_enemy", 1);
    gui_SetValue("esp_enemy_box", 0);
    gui_SetValue("esp_enemy_weapon", 0);
    gui_SetValue("esp_enemy_health", 0);
    gui_SetValue("esp_enemy_glow", 0);
	gui_SetValue("esp_enemy_skeleton", false);
	gui_SetValue("esp_enemy_name", false);	end end end
cb_Register("Draw", "espalwaysondead", ESP_Always_OnDead);

-------------------- Engine Radar
function engineradar()
if ERadar:GetValue() then ERval = 1; else ERval = 0; end
for o, radar in pairs(entities.FindByClass("CCSPlayer")) do radar:SetProp("m_bSpotted", ERval); end end
cb_Register("Draw", "engine radar", engineradar);

-------------------- Enemy & Team Tracers
function Tracers()
if GetLocalPlayer() ~= nil then
local sX, sY = draw_GetScreenSize();
local lpTeamNum = GetLocalPlayer():GetProp("m_iTeamNum")
local players = entities.FindByClass("CCSPlayer");
for i = 1, #players do
	local player = players[i];
	local pX, pY, pZ = client.WorldToScreen(player:GetProp("m_vecOrigin"));
if tracersEnemy:GetValue() then
	if player:GetProp("m_iTeamNum") ~= lpTeamNum then
		if player:IsAlive() then
			if pX ~= nil and pY ~= nil then
				draw_Color(255, 0, 0, 255); draw_Line(sX/2, sY, pX, pY); end end end end
if tracersTeam:GetValue() then
	if player:GetProp("m_iTeamNum") == lpTeamNum then
		if player:IsAlive() then
			if pX ~= nil and pY ~= nil then
				draw_Color(0, 0, 255, 255); draw_Line(sX/2, sY, pX, pY); end end end end	
end end end
cb_Register("Draw", "I'm already tracer", Tracers);

-------------------- Enemy & Team & Other Distance + visible help
function Distance(builder)
local ent = builder:GetEntity(); local ppX, ppY, ppZ = ent:GetProp("m_vecOrigin"); local lX, lY, lZ = GetLocalPlayer():GetProp("m_vecOrigin"); local dist = distance2D(ppX, ppY, lX, lY);
if enemy_distance:GetValue() and ent:IsAlive() and ent:IsPlayer() and ent:GetTeamNumber() ~= GetLocalPlayer():GetTeamNumber() then builder:Color(255, 255, 255, 255); builder:AddTextBottom("FT: "..dist); end
if team_distance:GetValue() and ent:IsAlive() and ent:IsPlayer() and ent:GetTeamNumber() == GetLocalPlayer():GetTeamNumber() then builder:Color(255, 255, 255, 255); builder:AddTextBottom("FT: "..dist); end
if other_distance:GetValue() and not ent:IsPlayer() then builder:Color(255, 255, 255, 255); builder:AddTextBottom("FT: "..dist); end
if enemy_visiblehelp:GetValue() and ent:IsAlive() and ent:IsPlayer() and ent:GetTeamNumber() ~= GetLocalPlayer():GetTeamNumber() then builder:Color(255, 255, 255, 255); builder:AddTextTop("VISIBLE"); end end
cb_Register("DrawESP", "distance", Distance)

-------------------- full bright
function full_bright() if fBright:GetValue() then client_SetConVar("mat_fullbright", 1, true); else client_SetConVar("mat_fullbright", 0, true); end end
cb_Register('Draw', "Full brightness" ,full_bright);

-------------------- Knife on Left Hand
function on_knife_righthand()
if K_O_L_H:GetValue() then
if GetLocalPlayer() ~= nil then
if GetLocalPlayer():GetHealth() == nil or GetLocalPlayer():GetHealth() <= 0 then client_exec("cl_righthand 1", true); return; end
local wep = GetLocalPlayer():GetPropEntity("m_hActiveWeapon");
if wep == nil then return; end
local cwep = wep:GetClass();
if cwep == "CKnife" then client_exec("cl_righthand 0", true); else client_exec("cl_righthand 1", true); end end end end
cb_Register("Draw", "knife", on_knife_righthand); 

local VIS_MAIN_REF = gui.Reference( "VISUALS", "Main" );

local DisablePostProcessing = gui.Checkbox( VIS_MAIN_REF, "lua_disablepostprocess", "Disable Post Processing", 0 );

local function PostProcessing()

	if DisablePostProcessing:GetValue() then
		client.SetConVar( "mat_postprocess_enable", 0, true );
	else
		client.SetConVar( "mat_postprocess_enable", 1, true );
	end

end

callbacks.Register( "Draw", "Disable Post Processing", PostProcessing )

